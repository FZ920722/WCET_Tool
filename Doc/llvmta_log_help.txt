OVERVIEW: llvm system compiler

USAGE: llvmta [options] <input bitcode>

OPTIONS:

0. LLVMTA General Options:

  --ta-ana-type=<value>                                                 - Choose the type of analysis to run (default 'timing')
    =value                                                              -   Perform value and address analysis
    =timing                                                             -   Compute execution time bound
    =crpd                                                               -   Compute cache-related preemption delay (characterisation)
    =l1icache                                                           -   Calculate a bound on the number of L1-Instruction Cache hits and misses
    =l1dcache                                                           -   Calculate a bound on the number of L1-Data Cache hits and misses
  --ta-anainfo-policy=<value>                                           - Choose the policy to store analysis information (default 'precompreq')
    =precompall                                                         -   Holds precomputed information at each program point
    =precompreq                                                         -   Holds precomputed information at required program points. Fast lookup while using less memory.
    =lowmem                                                             -   Holds information per basic-block, recomputation on the-fly - memory-saving
  --ta-analysis-entry-point=<string>                                    - The entry point for the analysis (default 'main')
  --ta-calculate-slope-interference-curve=<value>                       - Calculate the slope of a linear approximation of the interference response curve if starting in bound without interference. (default none)
    =dramrefresh                                                        -   DRAM refreshes
    =busblocking                                                        -   Shared bus blocking
    =icmpreemption                                                      -   Instr Cache Misses due to preemption
    =dcmpreemption                                                      -   Data Cache Misses due to preemption
    =writeback                                                          -   Writeback
  --ta-comp-type=<value>                                                - Choose which caches are supposed to be analysed compositional.
    =icache                                                             -   Instruction cache separated
    =dcache                                                             -   Data cache separated
    =dramrefresh                                                        -   DRAM refreshes separated
    =sharedbusblocking                                                  -   Blocking on the shared bus
  --ta-compana-joint-ilp                                                - Enables the joint ILP mode for compositional analyses where applicable. Default is off (false)
  --ta-compositional-base-bound=<value>                                 - Enables the computation of a compositional base bound. Requires an integrated analysis. (default none)
    =dramrefresh                                                        -   DRAM refreshes
    =busblocking                                                        -   Shared bus blocking
    =icmpreemption                                                      -   Instr Cache Misses due to preemption
    =dcmpreemption                                                      -   Data Cache Misses due to preemption
    =writeback                                                          -   Writeback
  --ta-crpdana-type=<value>                                             - Choose type of CRPD analyses to run. Only valid when passed with --ta-ana-type=crpd (default 'ecb,ucb,resilience')
    =ecb                                                                -   Perform ECB analysis
    =ucb                                                                -   Perform UCB analysis
    =dcucb                                                              -   Perform DC-UCB analysis
    =resilience                                                         -   Perform Resilience analysis
  --ta-dcache-persistence=<value>                                       - Choose the type of persistence analysis for the data cache (default 'none')
    =none                                                               -   No persistence analysis
    =setwise                                                            -   Set-wise conflict counting persistence analysis
    =elementwise                                                        -   Element-wise conflict counting persistence analysis
    =conditionalmust                                                    -   Conditional must persistence analysis
  --ta-dump-interference-response-curve=<value>                         - Choose for which interference source we want to dump an interference response curve. (default none)
    =dramrefresh                                                        -   DRAM refreshes
    =busblocking                                                        -   Shared bus blocking
    =icmpreemption                                                      -   Instr Cache Misses due to preemption
    =dcmpreemption                                                      -   Data Cache Misses due to preemption
    =writeback                                                          -   Writeback
  --ta-dumpb-vcg-graph                                                  - Dumps the StateGraph in .vcg format (default:.dot)
  --ta-enable-fixpoint-checks                                           - Enable explicit fixpoint checks after each analysis run (default false)
  --ta-enable-muarchjoin                                                - Enable joining of similar microarchitectural states for efficiency (default true)
  --ta-extfunc-annotation-file=<string>                                 - Reads user-provided annotations for external functions from the given file (default: no file given)
  --ta-follow-localwc=<value>                                           - Choose which local worst cases should be followed exclusively.
    =icmiss                                                             -   Instruction cache miss
    =dcmiss                                                             -   Data cache miss
    =writeback                                                          -   Writeback upon eviction of dirty line
    =dramrefresh                                                        -   DRAM refresh
    =busblocking                                                        -   Blocking cycles on the shared bus
  --ta-icache-persistence=<value>                                       - Choose the type of persistence analysis for the instruction cache (default 'none')
    =none                                                               -   No persistence analysis
    =setwise                                                            -   Set-wise conflict counting persistence analysis
    =elementwise                                                        -   Element-wise conflict counting persistence analysis
    =conditionalmust                                                    -   Conditional must persistence analysis
  --ta-initial-link-register=<uint>                                     - The initial link register, i.e. where the final return target (default 0x00000000)
  --ta-initial-stack-pointer=<uint>                                     - The initial stack pointer when entry point is invoked (default 0x08000000)
  --ta-loop-bounds-file=<string>                                        - Takes the file with the given name and uses the loop bounds in it for the analysis (default: no file given)
  --ta-lpsolver=<value>                                                 - Choose the tool to solve the lp within the path analysis (default 'gurobi')
    =gurobi                                                             -   Commercial Gurobi LP solver
    =lpsolve                                                            -   Open-source lp_solve
  --ta-lpsolver-effort=<value>                                          - Choose which effort should be taken by the lp solver to reach an exact solution (default 'limited')
    =minimal                                                            -   Solve with default MIPGAP
    =limited                                                            -   Solve with default MIPGAP first, then try exact with time limit
    =maximal                                                            -   Solve with MIPGAP of 0.0 without time limit
  --ta-metric-max=<value>                                               - Which metrics should be maximised additional to the timing (default none)
    =l1dmisses                                                          -   L1-Data-Cache misses
    =l1imisses                                                          -   L1-Instruction-Cache misses
    =busaccesses                                                        -   Accesses to the shared bus
    =busstores                                                          -   Stores to the shared bus
    =writebacks                                                         -   Writebacks (only makes sense on write-back caches)
  --ta-metric-wcep=<value>                                              - Which metrics should be maximised on a worst-case timing path (default none)
    =l1dmisses                                                          -   L1-Data-Cache misses
    =l1imisses                                                          -   L1-Instruction-Cache misses
    =busaccesses                                                        -   Accesses to the shared bus
    =busstores                                                          -   Stores to the shared bus
    =writebacks                                                         -   Writebacks (only makes sense on write-back caches)
  --ta-output-unknown-extfuncs                                          - Outputs a template file 'ExtFuncAnnotations.csv' to provide annotations about external functions (default false)
  --ta-output-unknown-loops                                             - Outputs a file 'LoopAnnotations.csv' which enables the user to annotate loop bounds himself (default false)
  --ta-pathana-type=<value>                                             - Choose the type of path analysis to run (default 'simpleilp')
    =simpleilp                                                          -   Simple ILP solution
    =graphilp                                                           -   Graph ILP solution (prediction file)
  --ta-preemption-dcache-budget=<uint>                                  - How many additional data cache misses can occur due to preemption? (default 0)
  --ta-preemption-icache-budget=<uint>                                  - How many additional instruction cache misses can occur due to preemption? (default 0)
  --ta-preemptive                                                       - Can the execution of the program under analysis be preempted? (default false)
  --ta-quiet                                                            - Quiet mode: do not report on progress and do not dump detailed analysis information to files; should be used for performance measurements (default 'false')
  --ta-restart-after-external                                           - Resume with empty microarchitectural state after external function call (default false)
  --ta-start-address-code=<uint>                                        - The start address of the code section in the binary
  --ta-strict                                                           - Enables the strict mode: assert when unknown situation arises (default true)
  --ta-ucb-clever                                                       - Enables the clever UCB mode that handles spatial locality in a more precise way. (default false)

1. Context Sensitivity Options:

  --ta-loop-peel=<uint>                                                 - The number of initial loop iterations to distinguish (peel) during trace partitioning
  --ta-num-callee-tokens=<int>                                          - The maximal number of callee tokens in contexts that are distinguished during trace partitioning upon calls. -1 indicates unlimited length. Default 0.
  --ta-num-callsite-tokens=<int>                                        - The maximal number of callsite tokens in contexts that are distinguished during trace partitioning upon calls. -1 indicates unlimited length. Default 1.
  --ta-num-loop-tokens=<int>                                            - The maximal number of loop-related tokens (LoopIter, LoopPeel) in contexts that are distinguished during trace partitioning upon calls. -1 indicates unlimited length. Default 0.

2. Hardware Platform Configuration Options:

  --ta-bgmem-type=<value>                                               - Choose the type of background memory to use (default 'sram')
    =sram                                                               -   Fixed latency SRAM background memory
    =simpledram                                                         -   DRAM background memory with simple controller. Always closed-rows with fixed access latency. Refreshes in fixed intervals
  --ta-dram-refresh-latency=<uint>                                      - The latency of one refresh of the DRAM background memory. Option only applies to DRAM background memory. (default '7')
  --ta-mem-latency=<uint>                                               - The latency of the background memory. (default '9', i.e. transferring a single word takes 10 cycles)
  --ta-mem-per-word-latency=<uint>                                      - The additional latency of the background memory for each transferred word. (default '1')
  --ta-memory-type=<value>                                              - Choose the memory topology used in microarchitectural analysis (default 'single')
    =none                                                               -   No external memory (only valid for fixed-latency pipeline
    =single                                                             -   One unified single (potentially shared) background memory
    =separatecaches                                                     -   Separate instruction and data caches in front of unified background memory
    =priv-instr-spm-data-shared                                         -   Private instruction SPM, potentially shared data memory.
  --ta-muarch-type=<value>                                              - Choose the microarchitecture to analyse (default 'fixedlatency')
    =fixedlatency                                                       -   Pipeline with fixed latency per instruction
    =pret                                                               -   Single thread of a four-way thread-interleaved PRET pipeline
    =inorder                                                            -   Simple in-order 5-stage pipeline
    =strictlyinorder                                                    -   Strictly in-order 5-stage pipeline
    =outoforder                                                         -   Out-of-order pipeline
  --ta-num-concurrent-cores=<uint>                                      - The number of concurrent processor cores, only relevant for shared memory (default 0)
  --ta-shared-bus=<value>                                               - Select which type of shared bus is assumed.
    =none                                                               -   Dedicated bus: each access request is granted immediately.
    =roundRobin                                                         -   Shared bus with Round-Robin arbitration.
  --ta-stall-on=<value>                                                 - Choose on which local worst cases the pipeline should stall. (Default None)
    =dramrefresh                                                        -   DRAM refresh
    =busblocking                                                        -   Blocking cycles on the shared bus
  --ta-unblock-stores                                                   - Enables unblocking of stores, i.e. they finish directly and do not wait for background memory to complete. Default disabled.

3. Cache Configuration:

  --ta-dcache-assoc=<uint>                                              - The associativity of the data cache. The default is 2
  --ta-dcache-linesize=<uint>                                           - The linesize of the data cache in bytes. The default is 16
  --ta-dcache-nsets=<uint>                                              - The number of cache sets of the data cache. The default is 32
  --ta-dcache-replpol=<value>                                           - Choose which replacement policy should be used for the data cache. (Default: LRU)
    =lru                                                                -   Least-recently-used policy
    =fifo                                                               -   First-in First-out policy
    =alwayshit                                                          -   Always Hit cache (i.e. preloaded scratchpad)
    =alwaysmiss                                                         -   Always Miss cache (i.e. no cache)
  --ta-dcache-write-allocate                                            - Enables write-allocate mode of the cache. The default is =false to use write-non-allocate mode
  --ta-dcache-write-back                                                - Enables write-back mode of the cache. The default is write-through (false)
  --ta-icache-assoc=<uint>                                              - The associativity of the instruction cache. The default is 2
  --ta-icache-linesize=<uint>                                           - The linesize of the instruction cache in bytes. The default is 16
  --ta-icache-nsets=<uint>                                              - The number of cache sets of the instruction cache. The default is 32
  --ta-icache-replpol=<value>                                           - Choose which replacement policy should be used for the instruction cache. (Default: LRU)
    =lru                                                                -   Least-recently-used policy
    =fifo                                                               -   First-in First-out policy
    =alwayshit                                                          -   Always Hit cache (i.e. preloaded scratchpad)
    =alwaysmiss                                                         -   Always Miss cache (i.e. no cache)

4. Writeback Analysis:

  --ta-assume-clean-cache                                               - Assumes an initially clean cache in the writeback analyses (default:true)
  --ta-dfs-persistence                                                  - Whether to emit dfs-persistence constraints (default: true)
  --ta-dirtiness-analysis                                               - Toggles the dirtiness analysis (default: on)
  --ta-statically-refute-writebacks                                     - Whether to use the may-dirtyness analysis to refute write backs (default: true)
  --ta-wb-bound=<value>                                                 - Selects the bound enforced on the writebacks in the program. There is no reason to change this except for evaluation purposes (default:dfs)
    =none                                                               -   Do not bound the number of writebacks (rely on Dirtiness analysis only)
    =store                                                              -   Bound the number of writebacks by the number of stores in the program.
    =dfs                                                                -   Bound the number of writebacks by the number of dirtifying stores. If DirtinessAnalysis is disabled, this falls back to "store"

5. Array-aware Cache Analysis:

  --ta-array-analysis                                                   - Toggles the array-aware analysis (default: off)
  --ta-array-must=<value>                                               - Chooses the array extension for the MUST analysis (default: none, since it might be expensive)
    =none                                                               -   No special datastructure handling
    =conflict-set-intersect                                             -   Simple per-block conflict sets. Choose intersection on join
    =conflict-set-union                                                 -   Simple per-block conflict sets. Choose union on join
    =conflict-powerset                                                  -   Most powerful analysis: One bound per conflictset per block
  --ta-array-persis=<value>                                             - Chooses the array extension for the persistence analysis (default: none)
    =none                                                               -   No special datastructure handling
    =setwise                                                            -   Only relevant for elementwise persistence: Run a setwise persistence in parallel in an attempt to prove array accesses persistent

6. Multi-Core Corunner-sensitive Analysis:

  --ta-access-cycles-joinable-partition-size=<uint>                     - Size of the partitions that are used to decide if two upper bounds on the number of access cycles should be joined. Only has an effect for the arrival curve calculation. By default, all bounds are joined. A value of 1 means only join identical bounds. A value of X means only join bounds that result in the same number if they are both integer divided by X.
  --ta-arrival-curve-calculation-method=<value>                         - Method used for the calculation of the arrival curve values used in co-runner-sensitive analysis. (default 'ilpbased')
    =programGranularity                                                 -   Based on a minimum period and an upper bound on the number of accesses per program run. (potentially less precise)
    =ilpbased                                                           -   Based on an ILP implicit path enumeration.
  --ta-arrival-curve-call-site-get-inner-edges-method=<value>           - Which method to use to detect the inner edges of call sites in the calculation of values on an arrival curve. (default 'insideProgramRuns')
    =all                                                                -   all
    =insideProgramRuns                                                  -   insideProgramRuns
    =betweenInOutReachableSimple                                        -   betweenInOutReachableSimple
    =betweenInOutReachableSimplePlus                                    -   betweenInOutReachableSimplePlus
    =betweenInOutReachableDetailed                                      -   betweenInOutReachableDetailed
  --ta-arrival-curve-ilp-objective=<value>                              - Use one of two orthogonal objectives. Or use a combined version that is at least as precise as each variant, but potentially more precise than each one. (default 'variant1')
    =variant1                                                           -   Sum up upper bound on event occurrences for each edge.
    =variant2                                                           -   Sum up upper bound on event occurrences for each edge that is not first or the last of the path. For every remaining clock cycle of the time window, assume an event.
    =combined                                                           -   For each ILP valuation, use the minimum of above two variants as objective.
  --ta-arrival-curve-ilp-time-limit=<number>                            - The time limit in seconds for one arrival curve value calculation via ILP. 0.0 is the default value. 0.0 means there is no time limit. Note that we strongly recommend using a time limit for the calculation of arrival curve values as it is significantly more complex than the calculation of per-execution-run event bounds.
  --ta-arrival-curve-loop-get-inner-edges-method=<value>                - Which method to use to detect the inner edges of loops in the calculation of values on an arrival curve. (default 'insideProgramRuns')
    =all                                                                -   all
    =insideProgramRuns                                                  -   insideProgramRuns
    =betweenInOutReachableSimple                                        -   betweenInOutReachableSimple
    =betweenInOutReachableSimplePlus                                    -   betweenInOutReachableSimplePlus
    =betweenInOutReachableDetailed                                      -   betweenInOutReachableDetailed
  --ta-blocking-joinable-partition-size=<uint>                          - Size of the partitions that are used to decide if two lower blocking bounds should be joined. Only has an effect in combination with -ta-shared-memory-blocking-type=roundrobin+UBconcurrentaccesscycles. By default, all lower blocking bounds are joined. A value of 1 means only join identical bounds. A value of X means only join bounds that result in the same number if they are both integer divided by X.
  --ta-co-runner-sensitive                                              - Enables the co-runner-sensitive analysis. By default, is is disabled (false).
  --ta-co-runner-sensitive-analysis-fixed-point-type=<value>            - Determines which type of fixed point the iterative co-runner-sensitive analysis pursues (default 'greatest')
    =least                                                              -   Obtain least fixed point.
    =greatest                                                           -   Obtain greatest fixed point.
  --ta-co-runner-sensitive-dumped-blocked-cycles-scaled-to-accesses     - Dump the impact of the number of concurrently interfering accesses on the WCET bound instead of the concurrently interfering access cycles (default false).
  --ta-co-runner-sensitive-no-arrival-curve-values                      - Do not perform an arrival curve value calculation in co-runner-sensitive analysis. (default false)
  --ta-co-runner-sensitive-no-wcet-bound                                - Do not perform a WCET bound calculation in co-runner-sensitive analysis. A value true is not allowed if a relative period is specified. (default false)
  --ta-conc-acc-cyc-bounds=<string>                                     - Expects a list of natural numbers with semicolon as delimeter. The number of elements in the list must be a multiple of -ta-num-concurrent-cores and must not be 0.
  --ta-program-period=<uint>                                            - How many cycles at least have to pass between two starts of the program under a periodic scheduling. The default value 0 means that no periodic scheduling is assumed to lower bound the time between two program starts.
  --ta-program-period-rel=<number>                                      - value >= 1 means period is value * wcetAssumingMaxInterference. value < 1 means period is wcetAssumingNoInterference + value * (wcetAssumingMaxInterference - wcetAssumingNoInterference). Negative factor values are OK. If the resulting absolute period would be negative, it is assumed as 0. If the relative period is specified, it overwrites a possible absolute period.
  --ta-program-period-rel-eval-wrt-wcet-ignoring-interference           - If this is true, the relative period is multiplied with a wcet bound ignoring the interference to obtain the absolute period.
  --ta-program-period-subpath-method                                    - Use the subpath method for more precision when taking into account the program period.
  --ta-until-iteration-measurement=<int>                                - Perform dedicated measurements from the start until the end of the iteration for as many iterations as this parameter states. Note that there is also an iteration 0. A negative value disables this dedicated measurements. This parameter is ignored in co-runner-insensitive analysis.

Color Options:

  --color                                                               - Use colors in output (default=autodetect)

General options:

  -I=<string>                                                           - include search path
  -O=<char>                                                             - Optimization level. [-O0, -O1, -O2, or -O3] (default = '-O2')
  --addrsig                                                             - Emit an address-significance table
  --align-loops=<uint>                                                  - Default alignment for loops
  --allow-ginsert-as-artifact                                           - Allow G_INSERT to be considered an artifact. Hack around AMDGPU test infinite loops.
  --arm-add-build-attributes                                            - 
  --arm-implicit-it=<value>                                             - Allow conditional instructions outdside of an IT block
    =always                                                             -   Accept in both ISAs, emit implicit ITs in Thumb
    =never                                                              -   Warn in ARM, reject in Thumb
    =arm                                                                -   Accept in ARM, reject in Thumb
    =thumb                                                              -   Warn in ARM, emit implicit ITs in Thumb
  --asm-show-inst                                                       - Emit internal instruction representation to assembly file
  --asm-verbose                                                         - Add comments to directives.
  --basic-block-sections=<all | <function list (file)> | labels | none> - Emit basic blocks into separate sections
  --cfg-hide-cold-paths=<number>                                        - Hide blocks with relative frequency below the given value
  --cfg-hide-deoptimize-paths                                           - 
  --cfg-hide-unreachable-paths                                          - 
  --code-model=<value>                                                  - Choose code model
    =tiny                                                               -   Tiny code model
    =small                                                              -   Small code model
    =kernel                                                             -   Kernel code model
    =medium                                                             -   Medium code model
    =large                                                              -   Large code model
  --data-sections                                                       - Emit data into separate sections
  --debug-entry-values                                                  - Enable debug info for the debug entry values.
  --debugger-tune=<value>                                               - Tune debug info for a particular debugger
    =gdb                                                                -   gdb
    =lldb                                                               -   lldb
    =dbx                                                                -   dbx
    =sce                                                                -   SCE targets (e.g. PS4)
  --debugify-level=<value>                                              - Kind of debug info to add
    =locations                                                          -   Locations only
    =location+variables                                                 -   Locations and Variables
  --debugify-quiet                                                      - Suppress verbose debugify output
  --denormal-fp-math=<value>                                            - Select which denormal numbers the code is permitted to require
    =ieee                                                               -   IEEE 754 denormal numbers
    =preserve-sign                                                      -   the sign of a  flushed-to-zero number is preserved in the sign of 0
    =positive-zero                                                      -   denormals are flushed to positive zero
  --denormal-fp-math-f32=<value>                                        - Select which denormal numbers the code is permitted to require for float
    =ieee                                                               -   IEEE 754 denormal numbers
    =preserve-sign                                                      -   the sign of a  flushed-to-zero number is preserved in the sign of 0
    =positive-zero                                                      -   denormals are flushed to positive zero
  --disable-i2p-p2i-opt                                                 - Disables inttoptr/ptrtoint roundtrip optimization
  --disable-simplify-libcalls                                           - Disable simplify-libcalls
  --disable-tail-calls                                                  - Never emit tail calls
  --dot-cfg-mssa=<file name for generated dot file>                     - file name for generated dot file
  --dwarf-version=<int>                                                 - Dwarf version
  --dwarf64                                                             - Generate debugging info in the 64-bit DWARF format
  --emit-call-site-info                                                 - Emit call site debug information, if debug information is enabled.
  --emulated-tls                                                        - Use emulated TLS model
  --enable-cse-in-irtranslator                                          - Should enable CSE in irtranslator
  --enable-cse-in-legalizer                                             - Should enable CSE in Legalizer
  --enable-gvn-memdep                                                   - 
  --enable-load-in-loop-pre                                             - 
  --enable-load-pre                                                     - 
  --enable-loop-simplifycfg-term-folding                                - 
  --enable-name-compression                                             - Enable name/filename string compression
  --enable-no-infs-fp-math                                              - Enable FP math optimizations that assume no +-Infs
  --enable-no-nans-fp-math                                              - Enable FP math optimizations that assume no NaNs
  --enable-no-signed-zeros-fp-math                                      - Enable FP math optimizations that assume the sign of 0 is insignificant
  --enable-no-trapping-fp-math                                          - Enable setting the FP exceptions build attribute not to use exceptions
  --enable-split-backedge-in-load-pre                                   - 
  --enable-unsafe-fp-math                                               - Enable optimizations that may decrease FP precision
  --exception-model=<value>                                             - exception model
    =default                                                            -   default exception handling model
    =dwarf                                                              -   DWARF-like CFI based exception handling
    =sjlj                                                               -   SjLj exception handling
    =arm                                                                -   ARM EHABI exceptions
    =wineh                                                              -   Windows exception model
    =wasm                                                               -   WebAssembly exception handling
  --experimental-debug-variable-locations                               - Use experimental new value-tracking variable locations
  --fatal-warnings                                                      - Treat warnings as errors
  --filetype=<value>                                                    - Choose a file type (not all types are supported by all targets):
    =asm                                                                -   Emit an assembly ('.s') file
    =obj                                                                -   Emit a native object ('.o') file
    =null                                                               -   Emit nothing, for performance testing
  --float-abi=<value>                                                   - Choose float ABI type
    =default                                                            -   Target default float ABI type
    =soft                                                               -   Soft float ABI (implied by -soft-float)
    =hard                                                               -   Hard float ABI (uses FP registers)
  --force-dwarf-frame-section                                           - Always emit a debug frame section.
  --fp-contract=<value>                                                 - Enable aggressive formation of fused FP ops
    =fast                                                               -   Fuse FP ops whenever profitable
    =on                                                                 -   Only fuse 'blessed' FP ops.
    =off                                                                -   Only fuse FP ops when the result won't be affected.
  --frame-pointer=<value>                                               - Specify frame pointer elimination optimization
    =all                                                                -   Disable frame pointer elimination
    =non-leaf                                                           -   Disable frame pointer elimination for non-leaf frame
    =none                                                               -   Enable frame pointer elimination
  --fs-profile-debug-bw-threshold=<uint>                                - Only show debug message if the source branch weight is greater  than this value.
  --fs-profile-debug-prob-diff-threshold=<uint>                         - Only show debug message if the branch probility is greater than this value (in percentage).
  --function-sections                                                   - Emit functions into separate sections
  --generate-merged-base-profiles                                       - When generating nested context-sensitive profiles, always generate extra base profile for function with all its context profiles merged into it.
  --ignore-xcoff-visibility                                             - Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --incremental-linker-compatible                                       - When used with filetype=obj, emit an object file which can be used with an incremental linker
  --load=<pluginfilename>                                               - Load the specified plugin
  --march=<string>                                                      - Architecture to generate code for (see --version)
  --matrix-default-layout=<value>                                       - Sets the default matrix layout
    =column-major                                                       -   Use column-major layout
    =row-major                                                          -   Use row-major layout
  --mattr=<a1,+a2,-a3,...>                                              - Target specific attributes (-mattr=help for details)
  --mc-relax-all                                                        - When used with filetype=obj, relax all fixups in the emitted object file
  --mcpu=<cpu-name>                                                     - Target a specific cpu type (-mcpu=help for details)
  --meabi=<value>                                                       - Set EABI type (default depends on triple):
    =default                                                            -   Triple default EABI version
    =4                                                                  -   EABI version 4
    =5                                                                  -   EABI version 5
    =gnu                                                                -   EABI GNU
  --mir-strip-debugify-only                                             - Should mir-strip-debug only strip debug info from debugified modules by default
  --mtriple=<string>                                                    - Override target triple for module
  --no-deprecated-warn                                                  - Suppress all deprecated warnings
  --no-discriminators                                                   - Disable generation of discriminator information.
  --no-type-check                                                       - Suppress type errors (Wasm)
  --no-warn                                                             - Suppress all warnings
  --no-xray-index                                                       - Don't emit xray_fn_idx section
  --nozero-initialized-in-bss                                           - Don't place zero-initialized symbols into bss section
  -o=<filename>                                                         - Output filename
  --opaque-pointers                                                     - Use opaque pointers
  --pass-remarks-filter=<regex>                                         - Only record optimization remarks from passes whose names match the given regular expression
  --pass-remarks-format=<format>                                        - The format used for serializing remarks (default: YAML)
  --pass-remarks-output=<filename>                                      - Output filename for pass remarks
  --relax-elf-relocations                                               - Emit GOTPCRELX/REX_GOTPCRELX instead of GOTPCREL on x86-64 ELF
  --relocation-model=<value>                                            - Choose relocation model
    =static                                                             -   Non-relocatable code
    =pic                                                                -   Fully relocatable, position independent code
    =dynamic-no-pic                                                     -   Relocatable external references, non-relocatable code
    =ropi                                                               -   Code and read-only data relocatable, accessed PC-relative
    =rwpi                                                               -   Read-write data relocatable, accessed relative to static base
    =ropi-rwpi                                                          -   Combination of ropi and rwpi
  --run-pass=<pass-name>                                                - Run compiler only for specified passes (comma separated list)
  --safepoint-ir-verifier-print-only                                    - 
  --sample-profile-check-record-coverage=<N>                            - Emit a warning if less than N% of records in the input profile are matched to the IR.
  --sample-profile-check-sample-coverage=<N>                            - Emit a warning if less than N% of samples in the input profile are matched to the IR.
  --sample-profile-max-propagate-iterations=<uint>                      - Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
  --split-dwarf-file=<string>                                           - Specify the name of the .dwo file to encode in the DWARF output
  --split-dwarf-output=<filename>                                       - .dwo output filename
  --split-machine-functions                                             - Split out cold basic blocks from machine functions based on profile information
  --stack-size-section                                                  - Emit a section containing stack size metadata
  --stack-symbol-ordering                                               - Order local stack symbols.
  --stackrealign                                                        - Force align the stack to the minimum alignment
  --strict-dwarf                                                        - use strict dwarf
  --swift-async-fp=<value>                                              - Determine when the Swift async frame pointer should be set
    =auto                                                               -   Determine based on deployment target
    =always                                                             -   Always set the bit
    =never                                                              -   Never set the bit
  --tail-predication=<value>                                            - MVE tail-predication pass options
    =disabled                                                           -   Don't tail-predicate loops
    =enabled-no-reductions                                              -   Enable tail-predication, but not for reduction loops
    =enabled                                                            -   Enable tail-predication, including reduction loops
    =force-enabled-no-reductions                                        -   Enable tail-predication, but not for reduction loops, and force this which might be unsafe
    =force-enabled                                                      -   Enable tail-predication, including reduction loops, and force this which might be unsafe
  --tailcallopt                                                         - Turn fastcc calls into tail calls by (potentially) changing ABI.
  --thread-model=<value>                                                - Choose threading model
    =posix                                                              -   POSIX thread model
    =single                                                             -   Single thread model
  --time-trace                                                          - Record time trace
  --time-trace-file=<filename>                                          - Specify time trace file destination
  --tls-size=<uint>                                                     - Bit size of immediate TLS offsets
  --unique-basic-block-section-names                                    - Give unique names to every basic block section
  --unique-section-names                                                - Give unique names to every section
  --use-ctors                                                           - Use .ctors instead of .init_array.
  --vec-extabi                                                          - Enable the AIX Extended Altivec ABI.
  --verify-legalizer-debug-locs=<value>                                 - Verify that debug locations are handled
    =none                                                               -   No verification
    =legalizations                                                      -   Verify legalizations
    =legalizations+artifactcombiners                                    -   Verify legalizations and artifact combines
  --verify-region-info                                                  - Verify region info (time consuming)
  -x=<string>                                                           - Input language ('ir' or 'mir')
  --xcoff-traceback-table                                               - Emit the XCOFF traceback table

Generic Options:

  --help                                                                - Display available options (--help-hidden for more)
  --help-list                                                           - Display list of available options (--help-list-hidden for more)
  --version                                                             - Display the version of this program
